<body bgcolor=#000080>
<script src=CT_Modeler.js></script>
<script src=utility.js></script>
<canvas id='canvas1' width=1024 height=1024></canvas></td>

<script>
   // LIBRARY ROUTINE THAT ATTACHES EVENT METHODS TO A CANVAS

   addEventListenersToCanvas(canvas1);


   // ROTATE VIEW WHEN USER DRAGS MOUSE

   let time, rotateX = 0, rotateY = 0, x0, y0;
   addEventListenersToCanvas(canvas1);
   canvas1.onPress = function(x, y) { x0 = x; y0 = y; }
   canvas1.onDrag  = function(x, y) { rotateX += x - x0; x0 = x;
                                      rotateY += y - y0; y0 = y; }


   // CREATE A SCENE IN THIS CANVAS AND ADD SOME LIGHTS

   let scene = new CT.Scene(canvas1)
      .setLight(0, [ 1,  1, 1], [ 1,  1 , 1])
      .setLight(1, [-1,-.5,.5], [.2, .2 ,.2])
      .setLight(2, [-1, -1,-1], [.1, .05, 0]);


   // CREATE THE NODES OF THE ANIMATION HIERARCHY

   let root = new CT.Node();
   scene.add(root);

   let body = new CT.Node().setColor(.1,.3,.1);
   root.add(body);

   let waist = new CT.Node();
   body.add(waist);

   let shoulder = [], elbow = [], wrist = [];

   for (let n = 0 ; n < 2 ; n++) {
      shoulder[n] = new CT.Node();
      body.add(shoulder[n]);

      elbow[n] = new CT.Node().setColor(1,0,0);
      shoulder[n].add(elbow[n]);

      wrist[n] = new CT.Node();
      elbow[n].add(wrist[n]);
   }


   // CREATE THE VISIBLE SHAPES THAT GO INTO EACH NODE

   body.add(new CT.Sphere().translate(0,-.13,0).scale(.12,.15,.12));
   body.add(new CT.Sphere().translate(-.1,0,0).scale(.1,.02,.02));
   body.add(new CT.Sphere().translate( .1,0,0).scale(.1,.02,.02));
   for (let n = 0 ; n < 2 ; n++) {
      waist.add(new CT.Sphere().translate(0,-.1,0).scale(.1,.15,.1));
      shoulder[n].add(new CT.Sphere().translate(0,-.2,0).scale(.04,.2,.04));
      elbow[n].add(new CT.Sphere().translate(0,-.2,0).scale(.03,.2,.03));
      wrist[n].add(new CT.Sphere().translate(0,-.07,0).scale(.05,.07,.02));
   }


   // FRAME-BY-FRAME ANIMATION

   function update() {

      // GET CURRENT TIME IN SECONDS FROM THE SYSTEM CLOCK

      time = Date.now() / 1000;

      // SHIMMY AT THE WAIST

      body.identity().rotateZ(-Math.sin(4 * time) / 8);
      waist.identity().translate(0,-.3,0)
                      .rotateZ(Math.sin(4 * time) / 4);

      // SWING THE ARMS

      for (let n = 0 ; n < 2 ; n++) {
         let sgn = 2 * n - 1;
	 let t = 2 * (time + sgn * Math.PI);
	 let a =  .5 * sgn * Math.sin(t);
	 let b = -.5 * sgn * Math.cos(t) - .5;
         shoulder[n].identity().translate(sgn * .2,  0, 0).rotateX( a);
         elbow   [n].identity().translate(0       ,-.4, 0).rotateX( b);
         wrist   [n].identity().translate(0       ,-.4, 0).rotateX(-a);
      }

      // ROTATE THE ROOT OBJECT AS USER DRAGS MOUSE TO MODIFY THE VIEW

      rotateX = Math.max(-Math.PI/2, Math.min(Math.PI/2, rotateX));
      rotateY = Math.max(-Math.PI/2, Math.min(Math.PI/2, rotateY));
      root.identity().translate(0, .5, .3).rotateY(2 * rotateX).rotateX(-2 * rotateY);

      // DRAW THE SCENE AND REQUEST THE NEXT ANIMATION FRAME

      root.draw();
      requestAnimationFrame(update);
   }
   requestAnimationFrame(update);
</script>

